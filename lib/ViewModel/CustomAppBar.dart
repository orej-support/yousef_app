
import 'package:flutter/material.dart';
import 'package:flutter_secure_storage/flutter_secure_storage.dart';
import 'package:provider/provider.dart';
import 'package:youseuf_app/services/api_service.dart';

/// ViewModel ูุฅุฏุงุฑุฉ ุญุงูุฉ ุดุฑูุท ุงูุชุทุจูู ุงููุฎุตุต (CustomAppBar).
/// ูุณุชุฎุฏู ูุฐุง ุงูู ViewModel ูุฌูุจ ูุชุฎุฒูู ุจูุงูุงุช ุงููุณุชุฎุฏู ูุนุฏุฏ ุงูุฅุดุนุงุฑุงุช ุบูุฑ ุงูููุฑูุกุฉ.
class CustomAppBarViewModel extends ChangeNotifier {
  // ุฎุฏูุฉ API ููุชูุงุตู ูุน ุงููุงุฌูุฉ ุงูุฎูููุฉ (Backend).
  final ApiService _apiService = ApiService();

  // ูุชุบูุฑุงุช ูุชุฎุฒูู ุจูุงูุงุช ุงููุณุชุฎุฏู ูุญุงูุฉ ุงูุชุทุจูู.
  String? userType;
  String? userName;
  String? type;
  int _unreadCount = 0; // ุฌุนู ุงููุชุบูุฑ ุฎุงุตูุง ูุญูุงูุฉ ุงูุชุนุฏูู ุงููุจุงุดุฑ.

  // ูููุดุฆ ุงูู ViewModel ุงูุฐู ูุจุฏุฃ ุจุฌูุจ ุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ.
  CustomAppBarViewModel(BuildContext context) {
    fetchUserData();
    fetchUnreadCount(context);
  }

  // Getter ูููุตูู ุฅูู ุนุฏุฏ ุงูุฅุดุนุงุฑุงุช ูู ุฎุงุฑุฌ ุงูู ViewModel.
  int get unreadCount => _unreadCount;

  /// ุฅุนุงุฏุฉ ุชุนููู ุนุฏุฏ ุงูุฅุดุนุงุฑุงุช ุบูุฑ ุงูููุฑูุกุฉ ุฅูู ุงูุตูุฑ.
  /// ูุชู ุงุณุชุฏุนุงุคูุง ุนุงุฏุฉู ุจุนุฏ ุฃู ูููู ุงููุณุชุฎุฏู ุจูุชุญ ุตูุญุฉ ุงูุฅุดุนุงุฑุงุช.
  void resetUnreadCount() {
    _unreadCount = 0;
    notifyListeners();
  }

  /// ุชุญุฏูุซ ุฌููุน ุงูุจูุงูุงุช (ุจูุงูุงุช ุงููุณุชุฎุฏู ูุนุฏุฏ ุงูุฅุดุนุงุฑุงุช).
  /// ูููู ุงุณุชุฏุนุงุคูุง ุนูุฏ ุงูุญุงุฌุฉ ูุชุญุฏูุซ ุดุงูู ููุงุฌูุฉ ุงููุณุชุฎุฏู.
  Future<void> refreshData(BuildContext context) async {
    await fetchUserData();
    await fetchUnreadCount(context);
  }

  /// ุฌูุจ ุจูุงูุงุช ุงููุณุชุฎุฏู ูู ุงูุฎุงุฏู ูุชุญุฏูุซูุง.
  /// ูุชู ุชุญุฏูุซ ุงุณู ุงููุณุชุฎุฏู ูููุนู ุจูุงุกู ุนูู ููุน ุงููุณุชุฎุฏู (specialist ุฃู user).
  Future<void> fetchUserData() async {
    try {
      userType = await _apiService.getUserType();
      debugPrint('User Type: $userType');
      if (userType == 'specialist') {
        final specialist = await _apiService.getSpecialistProfile();
        userName = specialist?.name ?? '...';
        type = specialist?.type ?? '';
      } else {
        final user = await _apiService.getUserDashboardStats();
        userName = user?['data']?['user_name'] ?? '...';
        type = null;
      }
      notifyListeners();
    } catch (e) {
      debugPrint('Error fetching user data: $e');
    }
  }

  /// ุฌูุจ ุนุฏุฏ ุงูุฅุดุนุงุฑุงุช ุบูุฑ ุงูููุฑูุกุฉ ูู ุงูุฎุงุฏู ูุชุญุฏูุซ ุงูุนุฏุงุฏ.
  /// ูุฐู ุงูุฏุงูุฉ ูู ุงููุณุคููุฉ ุนู ุชุญุฏูุซ ุงูุนุฏุงุฏ ูู ุฃููููุฉ ุงูุฌุฑุณ.
  Future<void> fetchUnreadCount(BuildContext context) async {
    try {
      final int count = await _apiService.fetchUnreadNotificationsCount( context);

      // ุชุฌูุจ ุงูุชุญุฏูุซ ุฅุฐุง ูู ุชุชุบูุฑ ุงููููุฉ ูุชูุงุฏู ุฅุนุงุฏุฉ ุจูุงุก ุงููุงุฌูุฉ ุฏูู ุฏุงุนู.
      if (_unreadCount != count) {
        _unreadCount = count;
        print("๐ข ุนุฏุฏ ุงูุฅุดุนุงุฑุงุช: $_unreadCount");
        notifyListeners();
      }
    } catch (e) {
      // ูู ุญุงูุฉ ูุฌูุฏ ุฎุทุฃุ ูุชู ุชุนููู ุงูุนุฏุงุฏ ุฅูู 0 (ุฅุฐุง ูู ููู 0 ุจุงููุนู).
      if (_unreadCount != 0) {
        _unreadCount = 0;
        notifyListeners();
      }
      print("๐ข ุนุฏุฏ ุงูุฅุดุนุงุฑุงุช: $_unreadCount");
    }
  }
}