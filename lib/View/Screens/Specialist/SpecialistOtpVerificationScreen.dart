
import 'package:flutter/material.dart';
import 'package:pinput/pinput.dart';
import 'package:youseuf_app/View/Screens/Specialist/SpecialistSetNewPasswordScreen.dart';
import 'package:youseuf_app/core/theme/app_colors.dart';
import 'package:youseuf_app/core/utils/ScreenSize.dart'; // ðŸ’¡ Ø§Ø³ØªÙŠØ±Ø§Ø¯ ÙƒÙ„Ø§Ø³ Ø§Ù„Ø£Ø¨Ø¹Ø§Ø¯
import '../../../../services/api_service.dart';

class SpecialistOtpVerificationScreen extends StatefulWidget {
  final String email;
  const SpecialistOtpVerificationScreen({super.key, required this.email});

  @override
  State<SpecialistOtpVerificationScreen> createState() => _SpecialistOtpVerificationScreenState();
}

class _SpecialistOtpVerificationScreenState extends State<SpecialistOtpVerificationScreen> {
  final TextEditingController _otpController = TextEditingController();
  final ApiService _apiService = ApiService();
  bool _isLoading = false;

  void _verifyOtp() async {
    if (_otpController.text.length != 6) {
      _showSnackBar("Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø¥Ø¯Ø®Ø§Ù„ Ø±Ù…Ø² Ù…ÙƒÙˆÙ† Ù…Ù† 6 Ø£Ø±Ù‚Ø§Ù…", isError: true);
      return;
    }

    setState(() => _isLoading = true);

    try {
      final ApiResponse response = await _apiService.verifyOtpSpecialist(context,widget.email, _otpController.text);
      _showSnackBar(response.message, isError: !response.status);

      if (response.status) {
        Navigator.push(
          context,
          MaterialPageRoute(
            builder: (context) => SpecialistSetNewPasswordScreen(email: widget.email, otp: _otpController.text),
          ),
        );
      }
    } catch (e) {
      _showSnackBar("Ø®Ø·Ø£: $e", isError: true);
    } finally {
      setState(() => _isLoading = false);
    }
  }

  void _resendOtp() async {
    setState(() => _isLoading = true);
    try {
      final ApiResponse response = await _apiService.forgotPasswordSpecialist(context,widget.email);
      _showSnackBar(response.message, isError: !response.status);
    } finally {
      setState(() => _isLoading = false);
    }
  }

  void _showSnackBar(String message, {bool isError = false}) {
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(message), backgroundColor: isError ? Colors.red : Colors.green));
  }

  @override
  void dispose() {
    _otpController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    // ðŸ’¡ ØªÙ‡ÙŠØ¦Ø© ÙƒÙ„Ø§Ø³ Ø§Ù„Ø£Ø¨Ø¹Ø§Ø¯ Ù‡Ù†Ø§
    ScreenSize.init(context);

    return Scaffold(
      appBar: AppBar(
        title: const Text('Ø§Ù„ØªØ­Ù‚Ù‚ Ù…Ù† Ø§Ù„Ø±Ù…Ø²'),
        centerTitle: true,
      ),
      body: Padding(
        // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨ Ù…Ø¦ÙˆÙŠØ© Ù„Ù„Ù‡ÙˆØ§Ù…Ø´
        padding: EdgeInsets.all(ScreenSize.getWidth(6)),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Text(
              "Ø§Ù„ØªØ­Ù‚Ù‚ Ù…Ù† Ø§Ù„Ø±Ù…Ø²",
              style: TextStyle(
                fontSize: ScreenSize.getWidth(5.5), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
                fontWeight: FontWeight.bold,
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: ScreenSize.getHeight(1.2)), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
            Text(
              "Ø£Ø¯Ø®Ù„ Ø§Ù„Ø±Ù…Ø² Ø§Ù„Ù…Ø±Ø³Ù„ Ø¥Ù„Ù‰ ${widget.email}",
              style: TextStyle(
                color: Colors.grey,
                fontSize: ScreenSize.getWidth(4), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
              ),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: ScreenSize.getHeight(4)), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
            Center(
              child: Pinput(
                controller: _otpController,
                length: 6,
                defaultPinTheme: PinTheme(
                  width: ScreenSize.getWidth(12.5), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
                  height: ScreenSize.getHeight(6), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
                  textStyle: TextStyle(
                    fontSize: ScreenSize.getWidth(5), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
                    fontWeight: FontWeight.bold,
                  ),
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(ScreenSize.getWidth(3)), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
                    border: Border.all(color: Colors.grey),
                  ),
                ),
              ),
            ),
            SizedBox(height: ScreenSize.getHeight(2.5)), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
            _isLoading
                ?  Center(child: CircularProgressIndicator(color: blue))
                : ElevatedButton(
                    onPressed: _verifyOtp,
                    style: ElevatedButton.styleFrom(
                      minimumSize: Size(double.infinity, ScreenSize.getHeight(6)), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
                      backgroundColor: Theme.of(context).primaryColor,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(ScreenSize.getWidth(3)), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
                      ),
                    ),
                    child: Text(
                      "ØªØ£ÙƒÙŠØ¯",
                      style: TextStyle(
                        fontSize: ScreenSize.getWidth(4.5), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
                      ),
                    ),
                  ),
            SizedBox(height: ScreenSize.getHeight(1.8)), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
            TextButton(
              onPressed: _isLoading ? null : _resendOtp,
              child: Text(
                "Ø¥Ø¹Ø§Ø¯Ø© Ø¥Ø±Ø³Ø§Ù„ Ø§Ù„Ø±Ù…Ø²",
                style: TextStyle(color: Theme.of(context).primaryColor, fontSize: ScreenSize.getWidth(4)), // ðŸ’¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù†Ø³Ø¨Ø© Ù…Ø¦ÙˆÙŠØ©
              ),
            ),
          ],
        ),
      ),
    );
  }
}